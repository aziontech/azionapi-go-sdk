openapi: 3.0.0
info:
  description: "## Welcome to the Azion API!\n\nWith the following APIs you can check,\
    \ remove or update existing settings, besides creating new ones.\n\n* * *\n\n\
    ## Overview\n\nThe Azion API is a RESTful API, based on HTTPS requests, that allows\
    \ you to integrate your systems with our platform, simply, quickly, and securely.\n\
    \nHere you will find instructions on how our API works and what functionality\
    \ is available.\n\nThis documentation is being constantly updated. Make sure you\
    \ verify if there are any updates or changes before you perform any development\
    \ in your application, even if you are familiar with our API.\n\n* * *\n\nBoth\
    \ HTTPS requests and responses must be in JavaScript Object Notation (JSON) format.\
    \ All HTTPS requests and responses must follow these conventions.\n\n**Base URL**\n\
    \nThe base URL of the API, which must be used, is:\n\n[**https://api.azionapi.net/**](https://api.azionapi.net/)\n\
    \n**HTTP Methods**\n\nEach HTTP method defines the type of operation that will\
    \ be run.\n\n| HTTP Method | CRUD | Whole Collection (e.g. /items) | Specific\
    \ Item (e.g. /items/:item_id) |\n| --- | --- | --- | --- |\n| GET | Read | It\
    \ retrieves the list of items in a Collection. | It retrieves a specific item\
    \ in a Collection. |\n| POST | Create | It creates a new item in the Collection.\
    \ | \\- |\n| PUT | Update/Replace | It replaces a whole Collection with a new\
    \ one. | It replaces an item in a Collection with a new one. |\n| PATCH | Update/Modify\
    \ | It partially updates a Collection. | It partially updates an item in a Collection\
    \ |\n| DELETE | Delete | It deletes a whole Collection. | It deletes an item in\
    \ a Collection. |\n\n* * *\n\n**Status Codes**\n\nThe HTTP return code defines\
    \ the status – successful or not – after the requested operation is run.\n\n|\
    \ Status Code | Meaning |\n| --- | --- |\n| 200 OK | General Status for a successful\
    \ operation. |\n| 201 CREATED | Successfully created a collection or item, by\
    \ means of POST or PUT. |\n| 204 NO CONTENT | Successful operation, but without\
    \ any content to be return to the Body. Generally used for DELETE or PUT operations.\
    \ |\n| 207 MULTI-STATUS | A batch of operations were triggered by a single request,\
    \ which resulted in different return codes when it was run, for some of the operations.\
    \ The codes are displayed in the “status” field, in the body of the response,\
    \ for each sub-batch of operations for whichever are applicable. |\n| 400 BAD\
    \ REQUEST | Request error, such as invalid parameters, missing mandatory parameters\
    \ or others. |\n| 401 UNAUTHORIZED | Error caused by a missing HTTP Authentication\
    \ header. |\n| 403 FORBIDDEN | User does not have the permissions to run the requested\
    \ operation. |\n| 404 NOT FOUND | The requested resource does not exist. |\n|\
    \ 405 METHOD NOT ALLOWED | The requested method is not applicable with the URL.\
    \ |\n| 406 NOT ACCEPTABLE | Accept header missing from the HTTP request or the\
    \ header contains formatting or the version is not supported by the API. |\n|\
    \ 409 CONFLICT | Conflict generated in running the request, such as a request\
    \ to create an already existing record. |\n| 429 TOO MANY REQUESTS | The request\
    \ was temporarily rejected, due to exceeding the limit on operations. Wait for\
    \ the time defined in the X-Ratelimit-Reset header and try again. |\n| 500 INTERNAL\
    \ SERVER ERROR | Unintentional error, due to an unidentified failure in the request\
    \ process. |\n| \\--- |  |\n| **HTTP Headers** |  |\n\nAll requests must be generated\
    \ with the HTTP header specifying the desired code format for responses and the\
    \ API version used. The current version of the API is 3 and the format is application/json.\n\
    \n```\nAccept: application/json; version=3\n\n```\n\n* * *\n\n**Rate Limit**\n\
    \nThe limit of operations that can be run via the API is defined by 3 HTTP response\
    \ headers:\n\n*   **X-ratelimit-limit:** number of operations allowed in one time-frame;\n\
    *   **X-ratelimit-remaining:** number of operations still available in one time-frame;\n\
    *   **X-ratelimit-reset:** is the date and time, in IOS 8601 format, which represents\
    \ the point in the future when the time-frame will be closed and when the limits\
    \ will, therefore, be reset.\n    \n\nExample of HTTP response headers and a request:\n\
    \n```\nDate: Thu, 02 Nov 2017 12:30:28 GMT\nX-ratelimit-remaining: 199\nX-ratelimit-limit:\
    \ 200\nX-ratelimit-reset: 2017-11-02T12:31:28.675446\n\n```\n\nIn the example\
    \ provided, 200 operations are allowed within a 1-minute time frame. Of those,\
    \ there are 199 still available, because one has already been run. The total limit\
    \ will be reset after 1 minute.\n\nWhen the X-ratelimit-limit is reached, or in\
    \ other words, when the X-ratelimit-remaining reaches zero, the API will give\
    \ the error, HTTP 429 TOO MANY REQUESTS. If your application receives this error,\
    \ you will need to wait until the time defined in X-ratelimit-reset has passed,\
    \ to make another request.\n\n*   **X-ratelimit-limit by product**\n    \n\nThe\
    \ *X-ratelimit limit* variations by product are the following:\n\n*   **Real-Time\
    \ Metrics:** 20 requests per minute.\n*   **Real-Time Purge:** 200 requests per\
    \ minute; except for the Wildcard, which is 2000 a day.\n    \n\n> The rate-limit\
    \ values are based on the client_id.\n\n* * *\n\n**Optional Parameters**\n\nIn\
    \ this version, it is possible to include some optional parameters as part of\
    \ the GET method, which can help and modify the form in which your data will be\
    \ returned.\n\nYou can combine these parameters to get the result you want.\n\n\
    They are:\n\n| Parameter | Description | Accepted values: |\n| --- | --- | ---\
    \ |\n| order_by | Identifies which field the return should be sorted by. The default\
    \ ordering is ascending. | Depends on the fields available from the endpoint structure\
    \ |\n| sort | Defines which ordering to be used: ascending or descending. | asc\
    \  <br>  <br>desc |\n| page | Identifies which page should be returned, if the\
    \ return is paginated. The default value is 1. | Page number. |\n| page_size |\
    \ Identifies how many items should be returned per page. The default value is\
    \ 10. | Desired number of items. |\n\n* * *\n\n**Request Exemple**\n\nYou can\
    \ use one parameter, or a combination. See the example below, which uses all of\
    \ them in the same request.\n\n```\nGET /domains?order_by=name&page_size=20&sort=desc&page=3\n\
    Accept: application/json; version=3\nAuthorization: token 2909f3932069047f4736dc87e72baaddd19c9f75\n\
    \n```\n\n* * *\n\n# Authentication\n\nAuthentication and authorization of operations\
    \ via Azion API is done through Tokens.\n\nThe first step is to create the Token\
    \ through authenticating a user registered in [Real-Time Manager](https://sso.azion.com/login).\n\
    \n* * *\n\n## Encoding Username and Password in Base64\n\nOnly token creation\
    \ and cancelling operations are performed through Basic Authentication, that is,\
    \ with a username and password. You can create and cancel the token through the\
    \ API itself, but for that you need to encode your username and password in base64.\n\
    \nBase64 encoding can be done from the command line on a Unix terminal:\n\n```\n\
    $ echo 'user@domain:password'|base64\ndXNlckBkb21haW46cGFzc3dvcmQK\n\n```"
  title: Domain
  version: 1.0.0
servers:
- url: https://api.azionapi.net
- url: https://stage-api.azionapi.net
tags:
- description: "Through My Domains API you can retrieve, create, remove or update\
    \ Domains used by Edge Applications"
  name: Domains
paths:
  /domains:
    get:
      description: It returns the list of domains of an account.
      operationId: getDomains
      parameters:
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/DomainResponseWithResults'
          description: Successful response
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      security:
      - JWT: []
      summary: /domains
      tags:
      - Domains
    post:
      description: It enables you to include a new domain into an account.
      operationId: createDomain
      parameters:
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/CreateDomainRequest'
      responses:
        "200":
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/DomainResponseWithResult'
          description: Successful response
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      security:
      - JWT: []
      summary: /domains
      tags:
      - Domains
  /domains/{id}:
    delete:
      description: It enables you to delete a domain.
      operationId: delDomain
      parameters:
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - description: "The id of the domain to be deleted.\t"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      security:
      - JWT: []
      summary: /domains/:id
      tags:
      - Domains
    get:
      description: It returns details of a domain.
      operationId: getDomain
      parameters:
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - description: "The id of the domain to be consulted.\t"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/DomainResponseWithResult'
          description: Successful response
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      security:
      - JWT: []
      summary: /domains/:id
      tags:
      - Domains
    patch:
      description: "It updates one or more fields in a Domain, preserving the value\
        \ of the fields not informed."
      operationId: updateDomain
      parameters:
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/UpdateDomainRequest'
      responses:
        "200":
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/DomainResponseWithResult'
          description: Successful response
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      security:
      - JWT: []
      summary: /domains/:id
      tags:
      - Domains
    put:
      description: |-
        It overwrites all fields of a domain, while preserving the id. Optional fields not filled in will be replaced by the default values.

        To update only some fields in a domain, consider using the PATCH method instead of PUT.
      operationId: putDomain
      parameters:
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/PutDomainRequest'
      responses:
        "200":
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/DomainResponseWithResult'
          description: Successful response
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      security:
      - JWT: []
      summary: /domains:/:id
      tags:
      - Domains
components:
  schemas:
    CreateDomainRequest:
      additionalProperties: false
      example:
        edge_application_id: 0
        is_active: true
        digital_certificate_id: 6
        cname_access_only: true
        name: name
        cnames:
        - cnames
        - cnames
      properties:
        cnames:
          items:
            type: string
          type: array
        cname_access_only:
          type: boolean
        name:
          type: string
        is_active:
          type: boolean
        edge_application_id:
          format: int64
          type: integer
        digital_certificate_id:
          format: int64
          nullable: true
          type: integer
      required:
      - cname_access_only
      - cnames
      - digital_certificate_id
      - edge_application_id
      - is_active
      - name
      type: object
    UpdateDomainRequest:
      additionalProperties: false
      example:
        edge_application_id: 0
        is_active: true
        digital_certificate_id: 6
        cname_access_only: true
        name: name
        cnames:
        - cnames
        - cnames
      properties:
        cnames:
          items:
            type: string
          type: array
        cname_access_only:
          type: boolean
        name:
          type: string
        is_active:
          type: boolean
        edge_application_id:
          format: int64
          type: integer
        digital_certificate_id:
          format: int64
          nullable: true
          type: integer
      type: object
    PutDomainRequest:
      additionalProperties: false
      example:
        edge_application_id: 0
        is_active: true
        digital_certificate_id: 6
        cname_access_only: true
        name: name
        cnames:
        - cnames
        - cnames
      properties:
        cnames:
          items:
            type: string
          type: array
        cname_access_only:
          type: boolean
        name:
          type: string
        is_active:
          type: boolean
        edge_application_id:
          format: int64
          type: integer
        digital_certificate_id:
          format: int64
          nullable: true
          type: integer
      required:
      - cname_access_only
      - cnames
      - digital_certificate_id
      - edge_application_id
      - is_active
      - name
      type: object
    DomainLinks:
      additionalProperties: false
      example:
        next: next
        previous: previous
      properties:
        previous:
          type: string
        next:
          type: string
      required:
      - next
      - previous
      type: object
    DomainResponseWithResults:
      additionalProperties: false
      example:
        schema_version: 1
        count: 0
        links:
          next: next
          previous: previous
        total_pages: 6
        results:
        - edge_application_id: 5
          domain_name: domain_name
          environment: environment
          is_active: true
          digital_certificate_id: 2
          cname_access_only: true
          name: name
          id: 5
          cnames:
          - cnames
          - cnames
        - edge_application_id: 5
          domain_name: domain_name
          environment: environment
          is_active: true
          digital_certificate_id: 2
          cname_access_only: true
          name: name
          id: 5
          cnames:
          - cnames
          - cnames
      properties:
        count:
          format: int64
          type: integer
        total_pages:
          format: int64
          type: integer
        schema_version:
          format: int64
          type: integer
        links:
          $ref: '#/components/schemas/DomainLinks'
        results:
          items:
            $ref: '#/components/schemas/DomainResults'
          type: array
      required:
      - count
      - links
      - results
      - schema_version
      - total_pages
      type: object
    DomainResponseWithResult:
      additionalProperties: false
      example:
        schema_version: 0
        results:
          edge_application_id: 5
          domain_name: domain_name
          environment: environment
          is_active: true
          digital_certificate_id: 2
          cname_access_only: true
          name: name
          id: 5
          cnames:
          - cnames
          - cnames
      properties:
        schema_version:
          format: int64
          type: integer
        results:
          $ref: '#/components/schemas/DomainResults'
      required:
      - results
      - schema_version
      type: object
    DomainResults:
      additionalProperties: false
      example:
        edge_application_id: 5
        domain_name: domain_name
        environment: environment
        is_active: true
        digital_certificate_id: 2
        cname_access_only: true
        name: name
        id: 5
        cnames:
        - cnames
        - cnames
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        cnames:
          items:
            type: string
          type: array
        cname_access_only:
          type: boolean
        is_active:
          type: boolean
        edge_application_id:
          format: int64
          type: integer
        digital_certificate_id:
          format: int64
          nullable: true
          type: integer
        domain_name:
          type: string
        environment:
          type: string
      required:
      - content_type
      - id
      - last_editor
      - name
      - type
      - updated_at
      type: object
  securitySchemes:
    JWT:
      description: |
        You must inform a token to auth.
        Usage format: `Token <TOKEN>`
      in: header
      name: Authorization
      type: apiKey
