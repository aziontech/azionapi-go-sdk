/*
Domain API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package domains

import (
	"encoding/json"
)

// checks if the DomainResponseWithResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DomainResponseWithResult{}

// DomainResponseWithResult struct for DomainResponseWithResult
type DomainResponseWithResult struct {
	SchemaVersion int64 `json:"schema_version"`
	Results DomainResults `json:"results"`
}

// NewDomainResponseWithResult instantiates a new DomainResponseWithResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainResponseWithResult(schemaVersion int64, results DomainResults) *DomainResponseWithResult {
	this := DomainResponseWithResult{}
	this.SchemaVersion = schemaVersion
	this.Results = results
	return &this
}

// NewDomainResponseWithResultWithDefaults instantiates a new DomainResponseWithResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainResponseWithResultWithDefaults() *DomainResponseWithResult {
	this := DomainResponseWithResult{}
	return &this
}

// GetSchemaVersion returns the SchemaVersion field value
func (o *DomainResponseWithResult) GetSchemaVersion() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SchemaVersion
}

// GetSchemaVersionOk returns a tuple with the SchemaVersion field value
// and a boolean to check if the value has been set.
func (o *DomainResponseWithResult) GetSchemaVersionOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SchemaVersion, true
}

// SetSchemaVersion sets field value
func (o *DomainResponseWithResult) SetSchemaVersion(v int64) {
	o.SchemaVersion = v
}

// GetResults returns the Results field value
func (o *DomainResponseWithResult) GetResults() DomainResults {
	if o == nil {
		var ret DomainResults
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *DomainResponseWithResult) GetResultsOk() (*DomainResults, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Results, true
}

// SetResults sets field value
func (o *DomainResponseWithResult) SetResults(v DomainResults) {
	o.Results = v
}

func (o DomainResponseWithResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DomainResponseWithResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["schema_version"] = o.SchemaVersion
	toSerialize["results"] = o.Results
	return toSerialize, nil
}

type NullableDomainResponseWithResult struct {
	value *DomainResponseWithResult
	isSet bool
}

func (v NullableDomainResponseWithResult) Get() *DomainResponseWithResult {
	return v.value
}

func (v *NullableDomainResponseWithResult) Set(val *DomainResponseWithResult) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainResponseWithResult) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainResponseWithResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainResponseWithResult(val *DomainResponseWithResult) *NullableDomainResponseWithResult {
	return &NullableDomainResponseWithResult{value: val, isSet: true}
}

func (v NullableDomainResponseWithResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainResponseWithResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


