/*
Domain API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package domains

import (
	"encoding/json"
)

// checks if the DomainLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DomainLinks{}

// DomainLinks struct for DomainLinks
type DomainLinks struct {
	Previous string `json:"previous"`
	Next string `json:"next"`
}

// NewDomainLinks instantiates a new DomainLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainLinks(previous string, next string) *DomainLinks {
	this := DomainLinks{}
	this.Previous = previous
	this.Next = next
	return &this
}

// NewDomainLinksWithDefaults instantiates a new DomainLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainLinksWithDefaults() *DomainLinks {
	this := DomainLinks{}
	return &this
}

// GetPrevious returns the Previous field value
func (o *DomainLinks) GetPrevious() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Previous
}

// GetPreviousOk returns a tuple with the Previous field value
// and a boolean to check if the value has been set.
func (o *DomainLinks) GetPreviousOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Previous, true
}

// SetPrevious sets field value
func (o *DomainLinks) SetPrevious(v string) {
	o.Previous = v
}

// GetNext returns the Next field value
func (o *DomainLinks) GetNext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Next
}

// GetNextOk returns a tuple with the Next field value
// and a boolean to check if the value has been set.
func (o *DomainLinks) GetNextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Next, true
}

// SetNext sets field value
func (o *DomainLinks) SetNext(v string) {
	o.Next = v
}

func (o DomainLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DomainLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["previous"] = o.Previous
	toSerialize["next"] = o.Next
	return toSerialize, nil
}

type NullableDomainLinks struct {
	value *DomainLinks
	isSet bool
}

func (v NullableDomainLinks) Get() *DomainLinks {
	return v.value
}

func (v *NullableDomainLinks) Set(val *DomainLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainLinks(val *DomainLinks) *NullableDomainLinks {
	return &NullableDomainLinks{value: val, isSet: true}
}

func (v NullableDomainLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


