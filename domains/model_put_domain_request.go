/*
Domain API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package domains

import (
	"encoding/json"
)

// checks if the PutDomainRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutDomainRequest{}

// PutDomainRequest struct for PutDomainRequest
type PutDomainRequest struct {
	Cnames []string `json:"cnames"`
	CnameAccessOnly bool `json:"cname_access_only"`
	Name string `json:"name"`
	IsActive bool `json:"is_active"`
	EdgeApplicationId int64 `json:"edge_application_id"`
	DigitalCertificateId NullableInt64 `json:"digital_certificate_id"`
}

// NewPutDomainRequest instantiates a new PutDomainRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutDomainRequest(cnames []string, cnameAccessOnly bool, name string, isActive bool, edgeApplicationId int64, digitalCertificateId NullableInt64) *PutDomainRequest {
	this := PutDomainRequest{}
	this.Cnames = cnames
	this.CnameAccessOnly = cnameAccessOnly
	this.Name = name
	this.IsActive = isActive
	this.EdgeApplicationId = edgeApplicationId
	this.DigitalCertificateId = digitalCertificateId
	return &this
}

// NewPutDomainRequestWithDefaults instantiates a new PutDomainRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutDomainRequestWithDefaults() *PutDomainRequest {
	this := PutDomainRequest{}
	return &this
}

// GetCnames returns the Cnames field value
func (o *PutDomainRequest) GetCnames() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Cnames
}

// GetCnamesOk returns a tuple with the Cnames field value
// and a boolean to check if the value has been set.
func (o *PutDomainRequest) GetCnamesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cnames, true
}

// SetCnames sets field value
func (o *PutDomainRequest) SetCnames(v []string) {
	o.Cnames = v
}

// GetCnameAccessOnly returns the CnameAccessOnly field value
func (o *PutDomainRequest) GetCnameAccessOnly() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CnameAccessOnly
}

// GetCnameAccessOnlyOk returns a tuple with the CnameAccessOnly field value
// and a boolean to check if the value has been set.
func (o *PutDomainRequest) GetCnameAccessOnlyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CnameAccessOnly, true
}

// SetCnameAccessOnly sets field value
func (o *PutDomainRequest) SetCnameAccessOnly(v bool) {
	o.CnameAccessOnly = v
}

// GetName returns the Name field value
func (o *PutDomainRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PutDomainRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PutDomainRequest) SetName(v string) {
	o.Name = v
}

// GetIsActive returns the IsActive field value
func (o *PutDomainRequest) GetIsActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value
// and a boolean to check if the value has been set.
func (o *PutDomainRequest) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsActive, true
}

// SetIsActive sets field value
func (o *PutDomainRequest) SetIsActive(v bool) {
	o.IsActive = v
}

// GetEdgeApplicationId returns the EdgeApplicationId field value
func (o *PutDomainRequest) GetEdgeApplicationId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.EdgeApplicationId
}

// GetEdgeApplicationIdOk returns a tuple with the EdgeApplicationId field value
// and a boolean to check if the value has been set.
func (o *PutDomainRequest) GetEdgeApplicationIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EdgeApplicationId, true
}

// SetEdgeApplicationId sets field value
func (o *PutDomainRequest) SetEdgeApplicationId(v int64) {
	o.EdgeApplicationId = v
}

// GetDigitalCertificateId returns the DigitalCertificateId field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *PutDomainRequest) GetDigitalCertificateId() int64 {
	if o == nil || o.DigitalCertificateId.Get() == nil {
		var ret int64
		return ret
	}

	return *o.DigitalCertificateId.Get()
}

// GetDigitalCertificateIdOk returns a tuple with the DigitalCertificateId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PutDomainRequest) GetDigitalCertificateIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DigitalCertificateId.Get(), o.DigitalCertificateId.IsSet()
}

// SetDigitalCertificateId sets field value
func (o *PutDomainRequest) SetDigitalCertificateId(v int64) {
	o.DigitalCertificateId.Set(&v)
}

func (o PutDomainRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutDomainRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cnames"] = o.Cnames
	toSerialize["cname_access_only"] = o.CnameAccessOnly
	toSerialize["name"] = o.Name
	toSerialize["is_active"] = o.IsActive
	toSerialize["edge_application_id"] = o.EdgeApplicationId
	toSerialize["digital_certificate_id"] = o.DigitalCertificateId.Get()
	return toSerialize, nil
}

type NullablePutDomainRequest struct {
	value *PutDomainRequest
	isSet bool
}

func (v NullablePutDomainRequest) Get() *PutDomainRequest {
	return v.value
}

func (v *NullablePutDomainRequest) Set(val *PutDomainRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutDomainRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutDomainRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutDomainRequest(val *PutDomainRequest) *NullablePutDomainRequest {
	return &NullablePutDomainRequest{value: val, isSet: true}
}

func (v NullablePutDomainRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutDomainRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


