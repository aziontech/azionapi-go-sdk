openapi: 3.0.3
info:
  description: REST API OpenAPI documentation for the Object Storage
  license:
    name: MIT
    url: https://github.com/aziontech/azionapi-openapi/blob/main/LICENSE.md
  title: Object Storage
  version: 1.0.0 (v1)
servers:
- description: Production
  url: https://api.azion.com
paths:
  /v4/storage/buckets:
    get:
      description: ""
      operationId: storage_api_buckets_list
      parameters:
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBucketList'
          description: ""
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "406":
          description: Not Acceptable
        "429":
          description: Too Many Requests
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - tokenAuth: []
      summary: List buckets
      tags:
      - storage
    post:
      description: ""
      operationId: storage_api_buckets_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BucketCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BucketCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BucketCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBucket'
          description: ""
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "406":
          description: Not Acceptable
        "429":
          description: Too Many Requests
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBucket'
          description: ""
      security:
      - tokenAuth: []
      summary: Create a new bucket
      tags:
      - storage
  /v4/storage/buckets/{bucket_name}/objects:
    get:
      description: ""
      operationId: storage_api_buckets_objects_list
      parameters:
      - explode: false
        in: path
        name: bucket_name
        required: true
        schema:
          type: string
        style: simple
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBucketObjectList'
          description: ""
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "406":
          description: Not Acceptable
        "429":
          description: Too Many Requests
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - tokenAuth: []
      summary: List buckets objects
      tags:
      - storage
  /v4/storage/buckets/{bucket_name}/objects/{object_key}:
    delete:
      description: Delete an object key from bucket
      operationId: storage_api_buckets_objects_destroy
      parameters:
      - explode: false
        in: path
        name: bucket_name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: object_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessObjectOperation'
          description: ""
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "406":
          description: Not Acceptable
        "429":
          description: Too Many Requests
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - tokenAuth: []
      summary: Delete object key
      tags:
      - storage
    get:
      description: Download the object key from bucket.
      operationId: storage_api_buckets_objects_retrieve
      parameters:
      - explode: false
        in: path
        name: bucket_name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: object_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: ""
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "406":
          description: Not Acceptable
        "429":
          description: Too Many Requests
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - tokenAuth: []
      summary: Download object
      tags:
      - storage
    post:
      description: Create a new object key in the bucket.
      operationId: storage_api_buckets_objects_create
      parameters:
      - description: "The content type of the file (Example: text/plain)."
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: bucket_name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: object_key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessObjectOperation'
          description: ""
        "201":
          description: Created
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "406":
          description: Not Acceptable
        "429":
          description: Too Many Requests
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - tokenAuth: []
      summary: Create new object key
      tags:
      - storage
    put:
      description: Update the object key from bucket.
      operationId: storage_api_buckets_objects_update
      parameters:
      - description: "The content type of the file (Example: text/plain)."
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: bucket_name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: object_key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessObjectOperation'
          description: ""
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "406":
          description: Not Acceptable
        "429":
          description: Too Many Requests
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - tokenAuth: []
      summary: Update the object key
      tags:
      - storage
  /v4/storage/buckets/{name}:
    delete:
      description: ""
      operationId: storage_api_buckets_destroy
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessBucketOperation'
          description: ""
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "406":
          description: Not Acceptable
        "429":
          description: Too Many Requests
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - tokenAuth: []
      summary: Delete a bucket
      tags:
      - storage
    patch:
      description: ""
      operationId: storage_api_buckets_partial_update
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBucket'
          description: ""
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "406":
          description: Not Acceptable
        "429":
          description: Too Many Requests
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBucket'
          description: ""
      security:
      - tokenAuth: []
      summary: Update bucket info
      tags:
      - storage
components:
  schemas:
    Bucket:
      example:
        edge_access: null
        name: name
      properties:
        name:
          maxLength: 63
          minLength: 6
          readOnly: true
          type: string
        edge_access:
          $ref: '#/components/schemas/EdgeAccessEnum'
      required:
      - edge_access
      - name
      type: object
    BucketCreate:
      example:
        edge_access: null
        name: name
      properties:
        name:
          maxLength: 63
          minLength: 6
          type: string
        edge_access:
          $ref: '#/components/schemas/EdgeAccessEnum'
      required:
      - edge_access
      - name
      type: object
    BucketObject:
      example:
        size: 0
        etag: etag
        last_modified: 2000-01-23T04:56:07.000+00:00
        key: key
      properties:
        key:
          readOnly: true
          type: string
        last_modified:
          format: date-time
          readOnly: true
          type: string
        size:
          readOnly: true
          type: integer
        etag:
          readOnly: true
          type: string
      required:
      - key
      - last_modified
      - size
      type: object
    EdgeAccessEnum:
      enum:
      - read_only
      - read_write
      - restricted
      type: string
    ObjectResponseData:
      example:
        object_key: object_key
      properties:
        object_key:
          type: string
      required:
      - object_key
      type: object
    PaginatedBucketList:
      example:
        next: http://api.example.org/accounts/?page=4
        previous: http://api.example.org/accounts/?page=2
        count: 123
        results:
        - edge_access: null
          name: name
        - edge_access: null
          name: name
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?page=4
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?page=2
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Bucket'
          type: array
      type: object
    PaginatedBucketObjectList:
      example:
        next: http://api.example.org/accounts/?page=4
        previous: http://api.example.org/accounts/?page=2
        count: 123
        results:
        - size: 0
          etag: etag
          last_modified: 2000-01-23T04:56:07.000+00:00
          key: key
        - size: 0
          etag: etag
          last_modified: 2000-01-23T04:56:07.000+00:00
          key: key
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?page=4
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?page=2
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/BucketObject'
          type: array
      type: object
    ResponseBucket:
      example:
        data:
          edge_access: null
          name: name
        state: null
      properties:
        state:
          $ref: '#/components/schemas/StateEnum'
        data:
          $ref: '#/components/schemas/Bucket'
      required:
      - data
      - state
      type: object
    StateEnum:
      enum:
      - pending
      - executed
      type: string
    SuccessBucketOperation:
      example:
        data:
          edge_access: null
          name: name
        state: ""
      properties:
        state:
          allOf:
          - $ref: '#/components/schemas/StateEnum'
          title: BucketStateEnum
        data:
          $ref: '#/components/schemas/Bucket'
      required:
      - data
      - state
      type: object
    SuccessObjectOperation:
      example:
        data:
          object_key: object_key
        state: ""
      properties:
        state:
          allOf:
          - $ref: '#/components/schemas/StateEnum'
          title: ObjectStateEnum
        data:
          $ref: '#/components/schemas/ObjectResponseData'
      required:
      - data
      - state
      type: object
  securitySchemes:
    tokenAuth:
      description: Token-based authentication with required prefix "Token"
      in: header
      name: Authorization
      type: apiKey
