/*
Digital Certificates API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package digital_certificates

import (
	"encoding/json"
)

// checks if the DC401 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DC401{}

// DC401 struct for DC401
type DC401 struct {
	Detail *string `json:"detail,omitempty"`
}

// NewDC401 instantiates a new DC401 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDC401() *DC401 {
	this := DC401{}
	return &this
}

// NewDC401WithDefaults instantiates a new DC401 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDC401WithDefaults() *DC401 {
	this := DC401{}
	return &this
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *DC401) GetDetail() string {
	if o == nil || IsNil(o.Detail) {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DC401) GetDetailOk() (*string, bool) {
	if o == nil || IsNil(o.Detail) {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *DC401) HasDetail() bool {
	if o != nil && !IsNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *DC401) SetDetail(v string) {
	o.Detail = &v
}

func (o DC401) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DC401) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Detail) {
		toSerialize["detail"] = o.Detail
	}
	return toSerialize, nil
}

type NullableDC401 struct {
	value *DC401
	isSet bool
}

func (v NullableDC401) Get() *DC401 {
	return v.value
}

func (v *NullableDC401) Set(val *DC401) {
	v.value = val
	v.isSet = true
}

func (v NullableDC401) IsSet() bool {
	return v.isSet
}

func (v *NullableDC401) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDC401(val *DC401) *NullableDC401 {
	return &NullableDC401{value: val, isSet: true}
}

func (v NullableDC401) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDC401) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


