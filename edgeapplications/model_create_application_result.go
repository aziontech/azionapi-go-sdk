/*
Edge Application API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapplications

import (
	"encoding/json"
)

// checks if the CreateApplicationResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateApplicationResult{}

// CreateApplicationResult struct for CreateApplicationResult
type CreateApplicationResult struct {
	Results ApplicationResultsCreate `json:"results"`
	SchemaVersion int64 `json:"schema_version"`
}

// NewCreateApplicationResult instantiates a new CreateApplicationResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateApplicationResult(results ApplicationResultsCreate, schemaVersion int64) *CreateApplicationResult {
	this := CreateApplicationResult{}
	this.Results = results
	this.SchemaVersion = schemaVersion
	return &this
}

// NewCreateApplicationResultWithDefaults instantiates a new CreateApplicationResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateApplicationResultWithDefaults() *CreateApplicationResult {
	this := CreateApplicationResult{}
	return &this
}

// GetResults returns the Results field value
func (o *CreateApplicationResult) GetResults() ApplicationResultsCreate {
	if o == nil {
		var ret ApplicationResultsCreate
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationResult) GetResultsOk() (*ApplicationResultsCreate, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Results, true
}

// SetResults sets field value
func (o *CreateApplicationResult) SetResults(v ApplicationResultsCreate) {
	o.Results = v
}

// GetSchemaVersion returns the SchemaVersion field value
func (o *CreateApplicationResult) GetSchemaVersion() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SchemaVersion
}

// GetSchemaVersionOk returns a tuple with the SchemaVersion field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationResult) GetSchemaVersionOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SchemaVersion, true
}

// SetSchemaVersion sets field value
func (o *CreateApplicationResult) SetSchemaVersion(v int64) {
	o.SchemaVersion = v
}

func (o CreateApplicationResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateApplicationResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["results"] = o.Results
	toSerialize["schema_version"] = o.SchemaVersion
	return toSerialize, nil
}

type NullableCreateApplicationResult struct {
	value *CreateApplicationResult
	isSet bool
}

func (v NullableCreateApplicationResult) Get() *CreateApplicationResult {
	return v.value
}

func (v *NullableCreateApplicationResult) Set(val *CreateApplicationResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApplicationResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApplicationResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApplicationResult(val *CreateApplicationResult) *NullableCreateApplicationResult {
	return &NullableCreateApplicationResult{value: val, isSet: true}
}

func (v NullableCreateApplicationResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApplicationResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


