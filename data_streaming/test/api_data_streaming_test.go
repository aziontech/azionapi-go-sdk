/*
Data Streaming - OpenAPI

Testing DataStreamingApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package data_streaming

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_data_streaming_DataStreamingApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test DataStreamingApiService CreateNewDataStreaming", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.DataStreamingApi.CreateNewDataStreaming(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DataStreamingApiService DeleteDataStreamingById", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var dataStreamingId int32

		httpRes, err := apiClient.DataStreamingApi.DeleteDataStreamingById(context.Background(), dataStreamingId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DataStreamingApiService EditDataStreamingById", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var dataStreamingId int32

		resp, httpRes, err := apiClient.DataStreamingApi.EditDataStreamingById(context.Background(), dataStreamingId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DataStreamingApiService ListDataStreamingById", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var dataStreamingId int32

		resp, httpRes, err := apiClient.DataStreamingApi.ListDataStreamingById(context.Background(), dataStreamingId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DataStreamingApiService ListDataStreamings", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.DataStreamingApi.ListDataStreamings(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DataStreamingApiService OverwriteDataStreamingById", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var dataStreamingId int32

		resp, httpRes, err := apiClient.DataStreamingApi.OverwriteDataStreamingById(context.Background(), dataStreamingId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
