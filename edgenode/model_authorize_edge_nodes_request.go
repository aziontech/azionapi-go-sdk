/*
Edgenode API

Azion Orchestration

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgenode

import (
	"encoding/json"
)

// checks if the AuthorizeEdgeNodesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizeEdgeNodesRequest{}

// AuthorizeEdgeNodesRequest struct for AuthorizeEdgeNodesRequest
type AuthorizeEdgeNodesRequest struct {
	EdgeNodeIds []int64 `json:"edge_node_ids"`
}

// NewAuthorizeEdgeNodesRequest instantiates a new AuthorizeEdgeNodesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizeEdgeNodesRequest(edgeNodeIds []int64) *AuthorizeEdgeNodesRequest {
	this := AuthorizeEdgeNodesRequest{}
	this.EdgeNodeIds = edgeNodeIds
	return &this
}

// NewAuthorizeEdgeNodesRequestWithDefaults instantiates a new AuthorizeEdgeNodesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizeEdgeNodesRequestWithDefaults() *AuthorizeEdgeNodesRequest {
	this := AuthorizeEdgeNodesRequest{}
	return &this
}

// GetEdgeNodeIds returns the EdgeNodeIds field value
func (o *AuthorizeEdgeNodesRequest) GetEdgeNodeIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.EdgeNodeIds
}

// GetEdgeNodeIdsOk returns a tuple with the EdgeNodeIds field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEdgeNodesRequest) GetEdgeNodeIdsOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.EdgeNodeIds, true
}

// SetEdgeNodeIds sets field value
func (o *AuthorizeEdgeNodesRequest) SetEdgeNodeIds(v []int64) {
	o.EdgeNodeIds = v
}

func (o AuthorizeEdgeNodesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizeEdgeNodesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["edge_node_ids"] = o.EdgeNodeIds
	return toSerialize, nil
}

type NullableAuthorizeEdgeNodesRequest struct {
	value *AuthorizeEdgeNodesRequest
	isSet bool
}

func (v NullableAuthorizeEdgeNodesRequest) Get() *AuthorizeEdgeNodesRequest {
	return v.value
}

func (v *NullableAuthorizeEdgeNodesRequest) Set(val *AuthorizeEdgeNodesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEdgeNodesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEdgeNodesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEdgeNodesRequest(val *AuthorizeEdgeNodesRequest) *NullableAuthorizeEdgeNodesRequest {
	return &NullableAuthorizeEdgeNodesRequest{value: val, isSet: true}
}

func (v NullableAuthorizeEdgeNodesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEdgeNodesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


