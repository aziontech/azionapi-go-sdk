/*
Edgenode API

Azion Orchestration

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgenode

import (
	"encoding/json"
)

// checks if the AuthorizeEdgeNodesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizeEdgeNodesResponse{}

// AuthorizeEdgeNodesResponse struct for AuthorizeEdgeNodesResponse
type AuthorizeEdgeNodesResponse struct {
	Authorized []int64 `json:"authorized"`
	Errors []UnauthorizedEdgeNodeInfo `json:"errors"`
}

// NewAuthorizeEdgeNodesResponse instantiates a new AuthorizeEdgeNodesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizeEdgeNodesResponse(authorized []int64, errors []UnauthorizedEdgeNodeInfo) *AuthorizeEdgeNodesResponse {
	this := AuthorizeEdgeNodesResponse{}
	this.Authorized = authorized
	this.Errors = errors
	return &this
}

// NewAuthorizeEdgeNodesResponseWithDefaults instantiates a new AuthorizeEdgeNodesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizeEdgeNodesResponseWithDefaults() *AuthorizeEdgeNodesResponse {
	this := AuthorizeEdgeNodesResponse{}
	return &this
}

// GetAuthorized returns the Authorized field value
func (o *AuthorizeEdgeNodesResponse) GetAuthorized() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.Authorized
}

// GetAuthorizedOk returns a tuple with the Authorized field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEdgeNodesResponse) GetAuthorizedOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Authorized, true
}

// SetAuthorized sets field value
func (o *AuthorizeEdgeNodesResponse) SetAuthorized(v []int64) {
	o.Authorized = v
}

// GetErrors returns the Errors field value
func (o *AuthorizeEdgeNodesResponse) GetErrors() []UnauthorizedEdgeNodeInfo {
	if o == nil {
		var ret []UnauthorizedEdgeNodeInfo
		return ret
	}

	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value
// and a boolean to check if the value has been set.
func (o *AuthorizeEdgeNodesResponse) GetErrorsOk() ([]UnauthorizedEdgeNodeInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.Errors, true
}

// SetErrors sets field value
func (o *AuthorizeEdgeNodesResponse) SetErrors(v []UnauthorizedEdgeNodeInfo) {
	o.Errors = v
}

func (o AuthorizeEdgeNodesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizeEdgeNodesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["authorized"] = o.Authorized
	toSerialize["errors"] = o.Errors
	return toSerialize, nil
}

type NullableAuthorizeEdgeNodesResponse struct {
	value *AuthorizeEdgeNodesResponse
	isSet bool
}

func (v NullableAuthorizeEdgeNodesResponse) Get() *AuthorizeEdgeNodesResponse {
	return v.value
}

func (v *NullableAuthorizeEdgeNodesResponse) Set(val *AuthorizeEdgeNodesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeEdgeNodesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeEdgeNodesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeEdgeNodesResponse(val *AuthorizeEdgeNodesResponse) *NullableAuthorizeEdgeNodesResponse {
	return &NullableAuthorizeEdgeNodesResponse{value: val, isSet: true}
}

func (v NullableAuthorizeEdgeNodesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeEdgeNodesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


