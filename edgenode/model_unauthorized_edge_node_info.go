/*
Edgenode API

Azion Orchestration

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgenode

import (
	"encoding/json"
)

// checks if the UnauthorizedEdgeNodeInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnauthorizedEdgeNodeInfo{}

// UnauthorizedEdgeNodeInfo struct for UnauthorizedEdgeNodeInfo
type UnauthorizedEdgeNodeInfo struct {
	Id int64 `json:"id"`
	Reason string `json:"reason"`
}

// NewUnauthorizedEdgeNodeInfo instantiates a new UnauthorizedEdgeNodeInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnauthorizedEdgeNodeInfo(id int64, reason string) *UnauthorizedEdgeNodeInfo {
	this := UnauthorizedEdgeNodeInfo{}
	this.Id = id
	this.Reason = reason
	return &this
}

// NewUnauthorizedEdgeNodeInfoWithDefaults instantiates a new UnauthorizedEdgeNodeInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnauthorizedEdgeNodeInfoWithDefaults() *UnauthorizedEdgeNodeInfo {
	this := UnauthorizedEdgeNodeInfo{}
	return &this
}

// GetId returns the Id field value
func (o *UnauthorizedEdgeNodeInfo) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UnauthorizedEdgeNodeInfo) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UnauthorizedEdgeNodeInfo) SetId(v int64) {
	o.Id = v
}

// GetReason returns the Reason field value
func (o *UnauthorizedEdgeNodeInfo) GetReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *UnauthorizedEdgeNodeInfo) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *UnauthorizedEdgeNodeInfo) SetReason(v string) {
	o.Reason = v
}

func (o UnauthorizedEdgeNodeInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnauthorizedEdgeNodeInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["reason"] = o.Reason
	return toSerialize, nil
}

type NullableUnauthorizedEdgeNodeInfo struct {
	value *UnauthorizedEdgeNodeInfo
	isSet bool
}

func (v NullableUnauthorizedEdgeNodeInfo) Get() *UnauthorizedEdgeNodeInfo {
	return v.value
}

func (v *NullableUnauthorizedEdgeNodeInfo) Set(val *UnauthorizedEdgeNodeInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableUnauthorizedEdgeNodeInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableUnauthorizedEdgeNodeInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnauthorizedEdgeNodeInfo(val *UnauthorizedEdgeNodeInfo) *NullableUnauthorizedEdgeNodeInfo {
	return &NullableUnauthorizedEdgeNodeInfo{value: val, isSet: true}
}

func (v NullableUnauthorizedEdgeNodeInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnauthorizedEdgeNodeInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


